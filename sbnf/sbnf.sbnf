extensions: sbnf

prototype = ( ~comment )* ;

comment{comment.line.number-sign} = '#+'{punctuation.definition.comment} ~'$\n?';

main = ( header # comments work too
       | rule
       )*
     ;

header = '[[:alnum:]_\-\.]+'{entity.name.tag}
         '(:)(.*)\n?'{string.unquoted}
       ;

rule = '[[:alnum:]_\-\.]+'{entity.name.function}
       arguments?
       `=`{keyword.operator.assignment}
       pattern
       `;`{punctuation.terminator.rule}
     ;

pattern = pattern-element (`|`{keyword.operator}? pattern)? ;

pattern-element = '~|!'{keyword.operator}?
                  pattern-item
                  '\*|\?'{keyword.control}?
                ;

pattern-item = literal arguments?
             | regex arguments?
             | group
             | '[[:alnum:]_\-\.]+'{variable.function}
             ;

group{meta.group} = `(`{punctuation.section.group.begin} pattern `)`{punctuation.section.group.end};

literal{string.quoted, include-prototype: false} = '`'{punctuation.definition.string.begin} ~'`'{punctuation.definition.string.begin} ;

regex{string.quoted, include-prototype: false} = `'`{punctuation.definition.string.begin}
                                                 ( ~`\'`{constant.character.escape} )*
                                                 ~`'`{punctuation.definition.string.end}
                                               ;

arguments = '{[^}]*}' ;
